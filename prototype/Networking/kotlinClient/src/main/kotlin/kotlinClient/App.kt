/*
 * This Kotlin source file was generated by the Gradle 'init' task.
 */
package kotlinClient

import javax.net.ssl.*;
import javax.net.ssl.SSLSocketFactory;
import javax.net.ssl.SSLSocket.*;
// import java.net.*;
// import com.github.nkzawa.socketio.client.IO
// import com.github.nkzawa.socketio.client.Socket
// import java.net.URISyntaxException


public fun <T> trace(a : T) : T {
  println(a.toString())
  return a
}


private const val IP : String = "localhost"
private const val PortNumber : Int = 6969


fun main(args: Array<String>) {
  var message = args.joinToString();
  var factory : SSLSocketFactory = 
      SSLSocketFactory.getDefault() as SSLSocketFactory;
  var socket  : SSLSocket = 
      factory.createSocket(IP , PortNumber) as SSLSocket;
  try {
    socket.startHandshake();
    println("Sending: $message");
    socket.getOutputStream().write(message.toByteArray());
    var buf : ByteArray = ByteArray(2048, {_ : Int -> 0})
    socket.getInputStream().read(buf);
    message = String(buf,Charsets.UTF_8);
    println("Received: $message");
    socket.close();
  } catch (e : SSLHandshakeException) {
    val help = "try running \"keytool -import -file ../rust_server/ssl/cert.pem -alias helloAppPrototype -keystore \$JAVA_HOME/lib/security/cacerts\" password is probably 'changeit'"
    println("could not find certification for server\n$help\n$e\nExiting")
  }
}
